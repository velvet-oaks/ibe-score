version: '3.7'

networks:
  web:
    external: true
    name: web
  backend:
    external: true
    name: backend

services:

  ibe-backend:
    image: backend-image
    container_name: ibe-backend
    hostname: ibe-backend
    build:
      context: .
      args:
        - NODE_ENV=development
    command: npm run dev
    restart: always
    ports:
      - 3000:3000
    networks:
      backend:
    environment:
      - NODE_ENV=development
    env_file:
      - './.env'
    volumes:
      - './data:/data:rw'
      - './src:/backend/src'
      - './keys:/backend/keys:ro'
      - './:/backend/'
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.ibe-backend.rule=Host(`localhost`)'
      - 'traefik.http.services.ibe-backend.loadbalancer.server.port=3000'
      - 'traefik.docker.network=backend'


  reverse-proxy:
    image: traefik:latest
    container_name: traefik
    hostname: traefik
    ports:
      - '80:80'
      - '443:443'
      - '8080:8080'
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock:ro'
      - './traefik:/etc/traefik:ro'
      - './logs:/opt/traefik/logs/:rw'
    command:
      # # API settings
      - --api.insecure=true
      - --api.dashboard=true
      - --api.debug=true
      # # Log Settings
      - --log.level=DEBUG
      - --accesslog=true
      - --accesslog.format=json
      # Provider Settings
      - --providers.docker=true # <== Enabling docker as the provider for traefik
      - --providers.docker.exposedbydefault=false # <== Don't expose every container to traefik, only expose enabled ones
      - --providers.file.filename=/dynamic.yaml # <== Referring to a dynamic configuration file
      - --providers.docker.network=traefik-proxy # <== Operate on the docker network named web
      # # Entrypoints Settings
      - --entrypoints.web.address=:80
      # - --entrypoints.web-secured.address="443"
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.api.rule=Host(`monitor.dev.localhost`)'
      - 'traefik.http.routers.api.service=api@internal'
      - 'traefik.http.services.api.loadBalancer.server.port=8080'
    networks:
      backend:
      web:

  # mongo:
  #   image: mongo:latest
  #   container_name: mongo
  #   environment:
  #     MONGO_INITDB_ROOT_USERNAME: root
  #     MONGO_INITDB_ROOT_PASSWORD: $DB_PASSWORD
  #   ports:
  #     - 27017:27017
  #   volumes:
  #     - ./mongod.conf:/etc/mongod.conf
  #     - ./db:/data/db:rw
  #     - ./data:/data/json_data:rw
  #   networks:
  #     - backend

